//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CoreDbModel", "FK_Owner_Vehicle", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Dinesh_Project.Customer), "Vehicles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Dinesh_Project.Vehicle), true)]
[assembly: EdmRelationshipAttribute("CoreDbModel", "FK_Operations", "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Dinesh_Project.Operation), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Dinesh_Project.Transaction), true)]
[assembly: EdmRelationshipAttribute("CoreDbModel", "FK_Technician", "Technicians", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Dinesh_Project.Technician), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Dinesh_Project.Transaction), true)]
[assembly: EdmRelationshipAttribute("CoreDbModel", "FK_Vehicles", "Vehicles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Dinesh_Project.Vehicle), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Dinesh_Project.Transaction), true)]

#endregion

namespace Dinesh_Project
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CoreDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CoreDbEntities object using the connection string found in the 'CoreDbEntities' section of the application configuration file.
        /// </summary>
        public CoreDbEntities() : base("name=CoreDbEntities", "CoreDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoreDbEntities object.
        /// </summary>
        public CoreDbEntities(string connectionString) : base(connectionString, "CoreDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoreDbEntities object.
        /// </summary>
        public CoreDbEntities(EntityConnection connection) : base(connection, "CoreDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Operation> Operations
        {
            get
            {
                if ((_Operations == null))
                {
                    _Operations = base.CreateObjectSet<Operation>("Operations");
                }
                return _Operations;
            }
        }
        private ObjectSet<Operation> _Operations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PasswordDetail> PasswordDetails
        {
            get
            {
                if ((_PasswordDetails == null))
                {
                    _PasswordDetails = base.CreateObjectSet<PasswordDetail>("PasswordDetails");
                }
                return _PasswordDetails;
            }
        }
        private ObjectSet<PasswordDetail> _PasswordDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Technician> Technicians
        {
            get
            {
                if ((_Technicians == null))
                {
                    _Technicians = base.CreateObjectSet<Technician>("Technicians");
                }
                return _Technicians;
            }
        }
        private ObjectSet<Technician> _Technicians;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Operations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperations(Operation operation)
        {
            base.AddObject("Operations", operation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PasswordDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPasswordDetails(PasswordDetail passwordDetail)
        {
            base.AddObject("PasswordDetails", passwordDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Technicians EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTechnicians(Technician technician)
        {
            base.AddObject("Technicians", technician);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreDbModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="registrationID">Initial value of the RegistrationID property.</param>
        public static Customer CreateCustomer(global::System.Int64 customerID, global::System.String name, global::System.String registrationID)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            customer.Name = name;
            customer.RegistrationID = registrationID;
            return customer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int64 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int64 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegistrationID
        {
            get
            {
                return _RegistrationID;
            }
            set
            {
                OnRegistrationIDChanging(value);
                ReportPropertyChanging("RegistrationID");
                _RegistrationID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegistrationID");
                OnRegistrationIDChanged();
            }
        }
        private global::System.String _RegistrationID;
        partial void OnRegistrationIDChanging(global::System.String value);
        partial void OnRegistrationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreDbModel", "FK_Owner_Vehicle", "Vehicles")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("CoreDbModel.FK_Owner_Vehicle", "Vehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("CoreDbModel.FK_Owner_Vehicle", "Vehicles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreDbModel", Name="Operation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Operation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Operation object.
        /// </summary>
        /// <param name="operationId">Initial value of the OperationId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Operation CreateOperation(global::System.Int32 operationId, global::System.String name)
        {
            Operation operation = new Operation();
            operation.OperationId = operationId;
            operation.Name = name;
            return operation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperationId
        {
            get
            {
                return _OperationId;
            }
            set
            {
                if (_OperationId != value)
                {
                    OnOperationIdChanging(value);
                    ReportPropertyChanging("OperationId");
                    _OperationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OperationId");
                    OnOperationIdChanged();
                }
            }
        }
        private global::System.Int32 _OperationId;
        partial void OnOperationIdChanging(global::System.Int32 value);
        partial void OnOperationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleClass
        {
            get
            {
                return _VehicleClass;
            }
            set
            {
                OnVehicleClassChanging(value);
                ReportPropertyChanging("VehicleClass");
                _VehicleClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleClass");
                OnVehicleClassChanged();
            }
        }
        private global::System.String _VehicleClass;
        partial void OnVehicleClassChanging(global::System.String value);
        partial void OnVehicleClassChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreDbModel", "FK_Operations", "Transactions")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("CoreDbModel.FK_Operations", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("CoreDbModel.FK_Operations", "Transactions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreDbModel", Name="PasswordDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PasswordDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PasswordDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="loginID">Initial value of the LoginID property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static PasswordDetail CreatePasswordDetail(global::System.Int32 id, global::System.String loginID, global::System.String password)
        {
            PasswordDetail passwordDetail = new PasswordDetail();
            passwordDetail.Id = id;
            passwordDetail.LoginID = loginID;
            passwordDetail.Password = password;
            return passwordDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginID
        {
            get
            {
                return _LoginID;
            }
            set
            {
                OnLoginIDChanging(value);
                ReportPropertyChanging("LoginID");
                _LoginID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginID");
                OnLoginIDChanged();
            }
        }
        private global::System.String _LoginID;
        partial void OnLoginIDChanging(global::System.String value);
        partial void OnLoginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreDbModel", Name="Technician")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Technician : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Technician object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Technician CreateTechnician(global::System.String name, global::System.Int32 id)
        {
            Technician technician = new Technician();
            technician.Name = name;
            technician.Id = id;
            return technician;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegistrationID
        {
            get
            {
                return _RegistrationID;
            }
            set
            {
                OnRegistrationIDChanging(value);
                ReportPropertyChanging("RegistrationID");
                _RegistrationID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegistrationID");
                OnRegistrationIDChanged();
            }
        }
        private global::System.String _RegistrationID;
        partial void OnRegistrationIDChanging(global::System.String value);
        partial void OnRegistrationIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreDbModel", "FK_Technician", "Transactions")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("CoreDbModel.FK_Technician", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("CoreDbModel.FK_Technician", "Transactions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreDbModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        /// <param name="operationId">Initial value of the OperationId property.</param>
        public static Transaction CreateTransaction(global::System.String serviceId, global::System.Int32 operationId)
        {
            Transaction transaction = new Transaction();
            transaction.ServiceId = serviceId;
            transaction.OperationId = operationId;
            return transaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                if (_ServiceId != value)
                {
                    OnServiceIdChanging(value);
                    ReportPropertyChanging("ServiceId");
                    _ServiceId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ServiceId");
                    OnServiceIdChanged();
                }
            }
        }
        private global::System.String _ServiceId;
        partial void OnServiceIdChanging(global::System.String value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperationId
        {
            get
            {
                return _OperationId;
            }
            set
            {
                OnOperationIdChanging(value);
                ReportPropertyChanging("OperationId");
                _OperationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationId");
                OnOperationIdChanged();
            }
        }
        private global::System.Int32 _OperationId;
        partial void OnOperationIdChanging(global::System.Int32 value);
        partial void OnOperationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VehicleId;
        partial void OnVehicleIdChanging(Nullable<global::System.Int32> value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TechnicianId
        {
            get
            {
                return _TechnicianId;
            }
            set
            {
                OnTechnicianIdChanging(value);
                ReportPropertyChanging("TechnicianId");
                _TechnicianId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TechnicianId");
                OnTechnicianIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TechnicianId;
        partial void OnTechnicianIdChanging(Nullable<global::System.Int32> value);
        partial void OnTechnicianIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentType
        {
            get
            {
                return _PaymentType;
            }
            set
            {
                OnPaymentTypeChanging(value);
                ReportPropertyChanging("PaymentType");
                _PaymentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentType");
                OnPaymentTypeChanged();
            }
        }
        private global::System.String _PaymentType;
        partial void OnPaymentTypeChanging(global::System.String value);
        partial void OnPaymentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentStatus
        {
            get
            {
                return _PaymentStatus;
            }
            set
            {
                OnPaymentStatusChanging(value);
                ReportPropertyChanging("PaymentStatus");
                _PaymentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentStatus");
                OnPaymentStatusChanged();
            }
        }
        private global::System.String _PaymentStatus;
        partial void OnPaymentStatusChanging(global::System.String value);
        partial void OnPaymentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PaymentAmount
        {
            get
            {
                return _PaymentAmount;
            }
            set
            {
                OnPaymentAmountChanging(value);
                ReportPropertyChanging("PaymentAmount");
                _PaymentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentAmount");
                OnPaymentAmountChanged();
            }
        }
        private Nullable<global::System.Double> _PaymentAmount;
        partial void OnPaymentAmountChanging(Nullable<global::System.Double> value);
        partial void OnPaymentAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreDbModel", "FK_Operations", "Operations")]
        public Operation Operation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("CoreDbModel.FK_Operations", "Operations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("CoreDbModel.FK_Operations", "Operations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operation> OperationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("CoreDbModel.FK_Operations", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operation>("CoreDbModel.FK_Operations", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreDbModel", "FK_Technician", "Technicians")]
        public Technician Technician
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Technician>("CoreDbModel.FK_Technician", "Technicians").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Technician>("CoreDbModel.FK_Technician", "Technicians").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Technician> TechnicianReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Technician>("CoreDbModel.FK_Technician", "Technicians");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Technician>("CoreDbModel.FK_Technician", "Technicians", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreDbModel", "FK_Vehicles", "Vehicles")]
        public Vehicle Vehicle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("CoreDbModel.FK_Vehicles", "Vehicles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("CoreDbModel.FK_Vehicles", "Vehicles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> VehicleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("CoreDbModel.FK_Vehicles", "Vehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("CoreDbModel.FK_Vehicles", "Vehicles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreDbModel", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="vehicleID">Initial value of the VehicleID property.</param>
        /// <param name="registrationNumber">Initial value of the RegistrationNumber property.</param>
        /// <param name="ownerid">Initial value of the Ownerid property.</param>
        public static Vehicle CreateVehicle(global::System.Int32 vehicleID, global::System.String registrationNumber, global::System.Int64 ownerid)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.VehicleID = vehicleID;
            vehicle.RegistrationNumber = registrationNumber;
            vehicle.Ownerid = ownerid;
            return vehicle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleID
        {
            get
            {
                return _VehicleID;
            }
            set
            {
                if (_VehicleID != value)
                {
                    OnVehicleIDChanging(value);
                    ReportPropertyChanging("VehicleID");
                    _VehicleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VehicleID");
                    OnVehicleIDChanged();
                }
            }
        }
        private global::System.Int32 _VehicleID;
        partial void OnVehicleIDChanging(global::System.Int32 value);
        partial void OnVehicleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegistrationNumber
        {
            get
            {
                return _RegistrationNumber;
            }
            set
            {
                OnRegistrationNumberChanging(value);
                ReportPropertyChanging("RegistrationNumber");
                _RegistrationNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegistrationNumber");
                OnRegistrationNumberChanged();
            }
        }
        private global::System.String _RegistrationNumber;
        partial void OnRegistrationNumberChanging(global::System.String value);
        partial void OnRegistrationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleType
        {
            get
            {
                return _VehicleType;
            }
            set
            {
                OnVehicleTypeChanging(value);
                ReportPropertyChanging("VehicleType");
                _VehicleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleType");
                OnVehicleTypeChanged();
            }
        }
        private global::System.String _VehicleType;
        partial void OnVehicleTypeChanging(global::System.String value);
        partial void OnVehicleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Ownerid
        {
            get
            {
                return _Ownerid;
            }
            set
            {
                OnOwneridChanging(value);
                ReportPropertyChanging("Ownerid");
                _Ownerid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ownerid");
                OnOwneridChanged();
            }
        }
        private global::System.Int64 _Ownerid;
        partial void OnOwneridChanging(global::System.Int64 value);
        partial void OnOwneridChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreDbModel", "FK_Owner_Vehicle", "Customers")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("CoreDbModel.FK_Owner_Vehicle", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("CoreDbModel.FK_Owner_Vehicle", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("CoreDbModel.FK_Owner_Vehicle", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("CoreDbModel.FK_Owner_Vehicle", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreDbModel", "FK_Vehicles", "Transactions")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("CoreDbModel.FK_Vehicles", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("CoreDbModel.FK_Vehicles", "Transactions", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
